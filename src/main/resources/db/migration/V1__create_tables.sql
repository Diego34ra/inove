CREATE TABLE tb_course (
                           id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           description VARCHAR(255),
                           name VARCHAR(255)
);

CREATE TABLE tb_school (
                           id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           city VARCHAR(255),
                           federative_unit VARCHAR(255),
                           name VARCHAR(255)
);

CREATE TABLE tb_user (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         birth_date TIMESTAMP(6),
                         cpf VARCHAR(255) NOT NULL,
                         email VARCHAR(255) NOT NULL,
                         name VARCHAR(255) NOT NULL,
                         password VARCHAR(255) NOT NULL,
                         role VARCHAR(255) NOT NULL,
                         school_id BIGINT
);

CREATE TABLE tb_section (
                            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            description VARCHAR(255),
                            title VARCHAR(255),
                            course_id BIGINT
);

CREATE TABLE tb_content (
                            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            description VARCHAR(255),
                            title VARCHAR(255),
                            section_id BIGINT,
                            theorical_content_file_name VARCHAR(255),
                            theorical_content_file_url VARCHAR(255),
                            theorical_content_text VARCHAR(255),
                            video_title VARCHAR(255),
                            video_url VARCHAR(255)
);

CREATE TABLE tb_feedback (
                             id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             comment VARCHAR(255),
                             course_id BIGINT,
                             student_id BIGINT
);

-- Tabelas de junção (sem PK explícita, como no original)
CREATE TABLE tb_admin_course (
                                 admin_id BIGINT NOT NULL,
                                 course_id BIGINT NOT NULL
);

CREATE TABLE tb_instructor_course (
                                      instructor_id BIGINT NOT NULL,
                                      course_id BIGINT NOT NULL
);

CREATE TABLE tb_student_course (
                                   student_id BIGINT NOT NULL,
                                   course_id BIGINT NOT NULL
);

-- Uniques (iguais ao original)
ALTER TABLE tb_feedback ADD CONSTRAINT uk_tb_feedback_student UNIQUE (student_id);
ALTER TABLE tb_user     ADD CONSTRAINT uk_tb_user_cpf      UNIQUE (cpf);
ALTER TABLE tb_user     ADD CONSTRAINT uk_tb_user_email    UNIQUE (email);

-- FKs
ALTER TABLE tb_admin_course
    ADD CONSTRAINT fk_admin_course_course
        FOREIGN KEY (course_id) REFERENCES tb_course (id),
    ADD CONSTRAINT fk_admin_course_admin
        FOREIGN KEY (admin_id)  REFERENCES tb_user (id);

ALTER TABLE tb_content
    ADD CONSTRAINT fk_content_section
        FOREIGN KEY (section_id) REFERENCES tb_section (id);

ALTER TABLE tb_feedback
    ADD CONSTRAINT fk_feedback_course
        FOREIGN KEY (course_id) REFERENCES tb_course (id),
    ADD CONSTRAINT fk_feedback_student
        FOREIGN KEY (student_id) REFERENCES tb_user (id);

ALTER TABLE tb_instructor_course
    ADD CONSTRAINT fk_instructor_course_course
        FOREIGN KEY (course_id) REFERENCES tb_course (id),
    ADD CONSTRAINT fk_instructor_course_instructor
        FOREIGN KEY (instructor_id) REFERENCES tb_user (id);

ALTER TABLE tb_section
    ADD CONSTRAINT fk_section_course
        FOREIGN KEY (course_id) REFERENCES tb_course (id);

ALTER TABLE tb_student_course
    ADD CONSTRAINT fk_student_course_student
        FOREIGN KEY (student_id) REFERENCES tb_user (id),
    ADD CONSTRAINT fk_student_course_course
        FOREIGN KEY (course_id) REFERENCES tb_course (id);

ALTER TABLE tb_user
    ADD CONSTRAINT fk_user_school
        FOREIGN KEY (school_id) REFERENCES tb_school (id);
