-- V1__create_tables.sql (PostgreSQL)

-- 1) Tipos / enums
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'user_role') THEN
CREATE TYPE user_role AS ENUM ('ADMINISTRATOR','INSTRUCTOR','STUDENT');
END IF;
END$$;

-- 2) Tabelas (sem ENGINE e sem AUTO_INCREMENT)
CREATE TABLE tb_admin_course (
                                 admin_id  BIGINT NOT NULL,
                                 course_id BIGINT NOT NULL
);

CREATE TABLE tb_content (
                            id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            description VARCHAR(255),
                            title       VARCHAR(255),
                            section_id  BIGINT
);

CREATE TABLE tb_course (
                           id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           description VARCHAR(255),
                           name        VARCHAR(255)
);

CREATE TABLE tb_feedback (
                             id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             comment    VARCHAR(255),
                             course_id  BIGINT,
                             student_id BIGINT
);

CREATE TABLE tb_instructor_course (
                                      instructor_id BIGINT NOT NULL,
                                      course_id     BIGINT NOT NULL
);

CREATE TABLE tb_school (
                           id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           city            VARCHAR(255),
                           federative_unit VARCHAR(255),
                           name            VARCHAR(255)
);

CREATE TABLE tb_section (
                            id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            description VARCHAR(255),
                            title       VARCHAR(255),
                            course_id   BIGINT
);

CREATE TABLE tb_student_course (
                                   student_id BIGINT NOT NULL,
                                   course_id  BIGINT NOT NULL
);

CREATE TABLE tb_user (
                         id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         birth_date TIMESTAMP(6),
                         cpf        VARCHAR(255) NOT NULL,
                         email      VARCHAR(255) NOT NULL,
                         name       VARCHAR(255) NOT NULL,
                         password   VARCHAR(255) NOT NULL,
                         role       user_role,          -- enum do Postgres
                         school_id  BIGINT
);

-- 3) Uniques
ALTER TABLE tb_feedback ADD CONSTRAINT UK_7h94xafctgk9f5dnjrsbex0nu UNIQUE (student_id);
ALTER TABLE tb_user     ADD CONSTRAINT UK_869sa3rebuf3nm0d4jwxdtouk UNIQUE (cpf);
ALTER TABLE tb_user     ADD CONSTRAINT UK_4vih17mube9j7cqyjlfbcrk4m UNIQUE (email);

-- 4) Colunas adicionais em tb_content (iguais Ã s suas)
ALTER TABLE tb_content ADD COLUMN theorical_content_file_name VARCHAR(255);
ALTER TABLE tb_content ADD COLUMN theorical_content_file_url  VARCHAR(255);
ALTER TABLE tb_content ADD COLUMN theorical_content_text      VARCHAR(255);
ALTER TABLE tb_content ADD COLUMN video_title                  VARCHAR(255);
ALTER TABLE tb_content ADD COLUMN video_url                    VARCHAR(255);

-- 5) FKs
ALTER TABLE tb_admin_course      ADD CONSTRAINT FK5kj3lvbgd3rxhknt70gwwr1vu FOREIGN KEY (course_id)    REFERENCES tb_course (id);
ALTER TABLE tb_admin_course      ADD CONSTRAINT FKot9sg4el78uimtgy0xavbmxp FOREIGN KEY (admin_id)     REFERENCES tb_user (id);

ALTER TABLE tb_content           ADD CONSTRAINT FKs9bf9or8p2agsk6goxdtx311j FOREIGN KEY (section_id)   REFERENCES tb_section (id);

ALTER TABLE tb_feedback          ADD CONSTRAINT FK9i84l1o5wfrm8ayur3cxsi8gw FOREIGN KEY (course_id)    REFERENCES tb_course (id);
ALTER TABLE tb_feedback          ADD CONSTRAINT FK3lj962uxt0lyw81ivx0r5cm50 FOREIGN KEY (student_id)   REFERENCES tb_user (id);

ALTER TABLE tb_instructor_course ADD CONSTRAINT FKjrev2w3nkxnqpi7f5y3mjewcr FOREIGN KEY (course_id)    REFERENCES tb_course (id);
ALTER TABLE tb_instructor_course ADD CONSTRAINT FKgylfytld029fnl0om6vtfn2oj FOREIGN KEY (instructor_id) REFERENCES tb_user (id);

ALTER TABLE tb_section           ADD CONSTRAINT FKfcg6y2tv2q6bx5ajdpra7mba0 FOREIGN KEY (course_id)    REFERENCES tb_course (id);

ALTER TABLE tb_student_course    ADD CONSTRAINT FKn8iklc57fcw2r42l84wvv902s FOREIGN KEY (student_id)   REFERENCES tb_user (id);
ALTER TABLE tb_student_course    ADD CONSTRAINT FKaj059itv6ls7nwg5mk0oh0slq FOREIGN KEY (course_id)    REFERENCES tb_course (id);

ALTER TABLE tb_user              ADD CONSTRAINT FK1uo2sv9ra9fbpkets01b2c442 FOREIGN KEY (school_id)    REFERENCES tb_school (id);

ALTER TABLE tb_admin_course      ADD PRIMARY KEY (admin_id, course_id);
ALTER TABLE tb_instructor_course ADD PRIMARY KEY (instructor_id, course_id);
ALTER TABLE tb_student_course    ADD PRIMARY KEY (student_id, course_id);
